{"version":3,"sources":["components/Navbar.js","services/cardNameService.js","components/GameMenu.js","components/AnnouncementBar.js","components/NameCard.js","components/PlayerBoard.js","components/MentorBoard.js","components/Game.js","App.js","serviceWorker.js","index.js","images/blue-card-1.png","images/red-card-1.png","images/grey-card-1.png","images/black-card.png","images/card.png","images/blue-card-2.png","images/red-card-2.png","images/grey-card-2.png"],"names":["Nav","styled","div","RightMenu","Navbar","gameColor","onRoleSelect","onTeamSelect","isMentor","isBluePlayer","useState","showSettings","toggleShowSettings","history","useHistory","handleShowSetting","currentValue","handleGoToMenu","push","style","backgroundColor","color","onClick","onChange","e","persist","target","value","createGame","axios","get","BASE_URL","then","res","data","gameId","NavContainer","GamePick","GamePickSection","TeamRolePick","GameMenu","onHandleGameMenu","joinGameId","setJoinGameId","newGameId","setNewGameId","onSubmit","preventDefault","type","display","cardNameService","Announcement","AnnouncementBar","winner","Card","CardTitle","NameCard","revealed","word","onCardClick","pointerEvents","backgroundSize","backgroundImage","blueCard1","redCard1","greyCard1","blackCard","backgroundPosition","regularCard","pickedWord","innerText","top","Board","Row","SideBoard","GameMoves","PlayerBoard","board","onBoardClick","mentorClue","teamTurn","playerColor","isGameOver","handleCardClick","updatedBoard","JSON","parse","stringify","wordObjIdx","findIndex","row","find","card","wordObj","wordNum","clue","map","ri","key","id","fontWeight","p","Control","form","MentorBoard","onMentorClueChange","mentorColor","formValues","setFormValues","useEffect","console","log","handleInputChange","currentValues","name","socket","require","io","Game","useParams","isLoading","updateIsLoading","gameState","updateGameState","emit","game","on","payload","gameObj","winnerTeam","clueObj","currentValus","gameStateStr","gameModel","isBlueTeamTurn","pickedColor","stateObj","updatedColorCounters","colorCounters","updatedIsGameOver","colorLimits","App","updateIsMentor","updateIsBluePlayer","updateGameId","handleRoleSelect","role","handleTeamSelect","team","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"m0BAIA,IAAMA,EAAMC,IAAOC,IAAV,KAmBHC,EAAYF,IAAOC,IAAV,KAkFAE,EArEA,SAAC,GAMT,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aACI,EACuCC,oBAAS,GADhD,mBACGC,EADH,KACiBC,EADjB,KAEAC,EAAUC,cAYRC,EAAoB,WACxBH,GAAmB,SAACI,GAAD,OAAmBA,MAGlCC,EAAiB,WACrBJ,EAAQK,KAAK,MAGf,OACE,kBAAClB,EAAD,CACEmB,MACgB,WAAdd,EACI,GACA,CAAEe,gBAAiBf,EAAWgB,MAAO,UAG3C,yBAAKC,QAASL,GACZ,8CAEF,kBAACd,EAAD,KACGQ,EACC,6BACE,4BACEY,SAjCa,SAACC,GACxBA,EAAEC,UACFnB,EAAakB,EAAEE,OAAOC,QAgCZA,MAAOnB,EAAW,SAAW,UAE7B,4BAAQmB,MAAM,UAAd,4BACA,4BAAQA,MAAM,UAAd,mCAEF,4BACEJ,SAnCa,SAACC,GACxBA,EAAEC,UACFlB,EAAaiB,EAAEE,OAAOC,QAkCZA,MAAOlB,EAAe,OAAS,OAE/B,4BAAQkB,MAAM,QAAd,iEACA,4BAAQA,MAAM,OAAd,kEAEF,4BAAQL,QAASL,GAAjB,UACA,4BAAQK,QAASP,GAAjB,WAGF,6BACE,4BAAQO,QAASP,GAAjB,c,iBCnFG,OACba,WAVF,WACE,OAAOC,IACJC,IAAIC,mBACJC,MAAK,SAACC,GACL,OAAOA,EAAIC,QAEZF,MAAK,SAACE,GAAD,OAAUA,EAAKC,Y,i3BCNzB,IAAMC,EAAenC,IAAOC,IAAV,KAOZmC,EAAWpC,IAAOC,IAAV,KAKRoC,EAAkBrC,IAAOC,IAAV,KAkBfqC,EAAetC,IAAOC,IAAV,KA4GHsC,EA9FE,SAAC,GAMX,IALLC,EAKI,EALJA,iBACAnC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aACI,EACgCC,mBAAS,IADzC,mBACGgC,EADH,KACeC,EADf,OAE8BjC,mBAAS,IAFvC,mBAEGkC,EAFH,KAEcC,EAFd,KAGAhC,EAAUC,cAqCd,OACE,kBAACsB,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,6FACA,0BAAMQ,SAnBa,SAACtB,GAC1BA,EAAEuB,iBAVFN,EAAiBC,GACjB7B,EAAQK,KAAK,SAAWwB,KA4BhB,4BAAQM,KAAK,UAAb,kCACA,2BAAOzB,SA1BK,SAACC,GACrBA,EAAEC,UACFkB,EAAcnB,EAAEE,OAAOC,QAwBiBqB,KAAK,WAGzC,kBAACV,EAAD,KACE,2EACA,6BACE,4BACEnB,MAAOyB,EAAY,CAAEK,QAAS,QAAW,CAAEA,QAAS,SACpD3B,QAlDU,WACpB,OAAO4B,EAAgBtB,aAAaI,MAAK,SAACY,GACxCC,EAAaD,QA8CP,gDAOF,yBAAKzB,MAAOyB,EAAY,CAAEK,QAAS,SAAY,CAAEA,QAAS,SACxD,uCACA,2BAAIL,GACJ,4BAAQtB,QApDM,WACtBmB,EAAiBG,GACjB/B,EAAQK,KAAK,SAAW0B,KAkDhB,wDAKN,kBAACL,EAAD,KACE,4BACEhB,SAvCiB,SAACC,GACxBA,EAAEC,UACFnB,EAAakB,EAAEE,OAAOC,QAsChBA,MAAOnB,EAAW,SAAW,UAE7B,4BAAQmB,MAAM,UAAd,4BACA,4BAAQA,MAAM,UAAd,mCAEF,4BACEJ,SA1CiB,SAACC,GACxBA,EAAEC,UACFlB,EAAaiB,EAAEE,OAAOC,QAyChBA,MAAOlB,EAAe,OAAS,OAE/B,4BAAQkB,MAAM,QAAd,iEACA,4BAAQA,MAAM,OAAd,qE,8NCrIV,IAAMwB,EAAelD,IAAOC,IAAV,KAsBHkD,EAVS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACE,kBAACF,EAAD,CAAchC,MAAOkC,EAAS,CAAEJ,QAAS,SAAY,CAAEA,QAAS,SAC9D,yCACY,0BAAM9B,MAAO,CAAEE,MAAOgC,IAAWA,GAD7C,gB,8pBCPN,IAAMC,EAAOrD,IAAOC,IAAV,KAeJqD,EAAYtD,IAAOC,IAAV,KAiDAsD,EApCE,SAAC,GAA4C,IAA1CnC,EAAyC,EAAzCA,MAAOoC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAOzC,OACE,kBAACL,EAAD,CACEnC,MACEsC,EACI,CACEG,cAAe,OACfC,eAAgB,QAChBC,gBACE,cAAU,SAAVzC,EACW0C,IACG,QAAV1C,EACO2C,IACG,SAAV3C,EACO4C,IACAC,IANX,MAQJ,CACEL,eAAgB,QAChBM,mBAAoB,SACpBL,gBAAgB,OAAD,OAASM,IAAT,MAGvB9C,QA5BgB,SAACE,GACnBA,EAAEC,UACF,IAAM4C,EAAa7C,EAAEE,OAAO4C,UAC5BX,EAAYU,KA2BV,kBAACd,EAAD,CAAWpC,MAAOsC,EAAW,GAAK,CAACc,IAAK,QAASnD,gBAAiB,cAAeC,MAAO,UAAWqC,K,mtBClEzG,IAAMc,EAAQvE,IAAOC,IAAV,KAKLuE,EAAMxE,IAAOC,IAAV,KAKHwE,GAAYzE,IAAOC,IAAV,KAOTyE,GAAY1E,IAAOC,IAAV,KAoFA0E,GApEK,SAAC,GAOd,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,aACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,WAEMC,EAAkB,SAACd,GACvB,IAAMe,EAAeC,KAAKC,MAAMD,KAAKE,UAAUV,IACzCW,EAAaJ,EAAaK,WAAU,SAACC,GAAD,OACxCA,EAAIC,MAAK,SAACC,GAAD,OAAUA,EAAKlC,OAASW,QAE7BwB,EAAUT,EAAaI,GAAYG,MACvC,SAACC,GAAD,OAAUA,EAAKlC,OAASW,KAE1BwB,EAAQpC,UAAYoC,EAAQpC,SAC5BqB,EAAaM,EAAcS,EAAQxE,QAGrC,OACE,kBAACmD,EAAD,CACErD,MACE4D,EAAWe,QAAU,GACD,KAApBf,EAAWgB,MACXf,IAAaC,EACT,CAAErB,cAAe,QACjB,IAGN,6BACGiB,EAAMmB,KAAI,SAACN,EAAKO,GACf,OACE,kBAACxB,EAAD,CAAKyB,IAAKD,GACPP,EAAIM,KAAI,SAACJ,GACR,OACE,kBAAC,EAAD,CACEM,IAAKN,EAAKO,GACV9E,MAAOuE,EAAKvE,MACZoC,SAAUmC,EAAKnC,SACfC,KAAMkC,EAAKlC,KACXC,YAAawB,YAQ3B,kBAACT,GAAD,CAAWvD,MAAO+D,EAAa,CAAEjC,QAAS,QAAW,IACnD,kBAAC0B,GAAD,KACE,uBAAGxD,MAAO,CAAEE,MAAO2D,EAAUoB,WAAY,SAAzC,2DACa,8BAAoB,SAAbpB,EAAsB,uCAAW,yCAErD,6BACE,0EACA,2BAAID,EAAWgB,OAEjB,6BACE,sFACA,2BAAIhB,EAAWe,c,qwDC7F3B,IAAMtB,GAAQvE,IAAOC,IAAV,MAKLuE,GAAMxE,IAAOC,IAAV,MAKHoD,GAAOrD,IAAOC,IAAV,MAUJqD,GAAYtD,IAAOoG,EAAV,MAqBT3B,IAVWzE,IAAOoG,EAAV,MAUIpG,IAAOC,IAAV,OAOToG,GAAUrG,IAAOsG,KAAV,MAqBP5B,GAAY1E,IAAOC,IAAV,MA4GAsG,GA5FK,SAAC,GAOd,IANL3B,EAMI,EANJA,MACA4B,EAKI,EALJA,mBACA1B,EAII,EAJJA,WACAC,EAGI,EAHJA,SACA0B,EAEI,EAFJA,YACAxB,EACI,EADJA,WACI,EACgCxE,mBAAS,CAAEoF,QAAS,EAAGC,KAAM,KAD7D,mBACGY,EADH,KACeC,EADf,KAEJC,qBAAU,WACRC,QAAQC,IAAI,qBAAuBJ,EAAWZ,MAC9Ce,QAAQC,IAAI,oBAAsBJ,EAAWb,YAG/C,IAMMkB,EAAoB,SAACxF,GACzBA,EAAEC,UACFmF,GAAc,SAACK,GAAD,sBACTA,EADS,gBAEXzF,EAAEE,OAAOwF,KAAO1F,EAAEE,OAAOC,YAI9B,OACE,kBAAC,GAAD,CAAOR,MAAO6D,IAAa0B,EAAc,CAAE9C,cAAe,QAAW,IACnE,6BACGiB,EAAMmB,KAAI,SAACN,EAAKO,GACf,OACE,kBAAC,GAAD,CAAKC,IAAKD,GACPP,EAAIM,KAAI,SAACJ,GACR,OAAKA,EAAKnC,SAQN,kBAAC,EAAD,CACEyC,IAAKN,EAAKO,GACV9E,MAAOuE,EAAKvE,MACZoC,SAAUmC,EAAKnC,SACfC,KAAMkC,EAAKlC,OAVb,kBAAC,GAAD,CAAMwC,IAAKN,EAAKO,GAAIhF,MAAO,CAAEC,gBAAiBwE,EAAKvE,QACjD,kBAAC,GAAD,KAAYuE,EAAKlC,eAkBjC,kBAAC,GAAD,CAAWvC,MAAO+D,EAAa,CAAEjC,QAAS,QAAW,IACnD,kBAACqD,GAAD,CAASxD,SA3CM,SAACtB,GACpBA,EAAEuB,iBACF0D,EAAmBE,GACnBC,EAAc,CAAEd,QAAS,EAAGC,KAAM,OAwC9B,8CAEE,2BACE/C,KAAK,OACLzB,SAAUyF,EACVrF,MAAOgF,EAAWZ,KAClBmB,KAAK,SANT,0DASE,2BACElE,KAAK,SACLzB,SAAUyF,EACVrF,MAAOgF,EAAWb,QAClBoB,KAAK,YAEP,4BAAQlE,KAAK,UAAb,SAEF,kBAAC,GAAD,KACE,uBAAG7B,MAAO,CAAEE,MAAO2D,EAAUoB,WAAY,SAAzC,2DACa,8BAAoB,SAAbpB,EAAsB,uCAAW,yCAErD,6BACE,0EACA,2BAAID,EAAWgB,OAEjB,6BACE,sFACA,2BAAIhB,EAAWe,cCtKrBqB,GADKC,EAAQ,GACJC,CAAG,yBA8HHC,OA5Hf,YAA2C,IAA3B9G,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAClB0B,EAAWoF,cAAXpF,OADkC,EAGHzB,oBAAS,GAHN,mBAGjC8G,EAHiC,KAGtBC,EAHsB,OAIH/G,mBAAS,MAJN,mBAIjCgH,EAJiC,KAItBC,EAJsB,KA6FxC,OAvFAd,qBAAU,WACRM,GAAOS,KAAK,OAAQ,CAAEC,KAAM1F,MAC3B,CAACqF,EAAWrF,IAEf0E,qBAAU,WACRM,GAAOW,GAAG,gBAAgB,SAACC,GACzB,IAAMC,EAAU3C,KAAKC,MAAMyC,GAC3BJ,EAAgBK,GAChBP,GAAgB,QAEjB,IA6ECD,EACK,4CAGL,6BACE,kBAAC,EAAD,CAAiBnE,OAAQqE,EAAUO,aAClCzH,EACC,kBAAC,GAAD,CACEiG,mBAxBqB,SAACyB,GAC9B,IACInD,EADaM,KAAKC,MAAMD,KAAKE,UAAUmC,IACjB3C,WAC1BA,EAAamD,EACbP,GAAgB,SAACQ,GAAD,sBACXA,EADW,CAEdpD,kBAGF,IAAMqD,EAAe/C,KAAKE,UAAL,eAChBmC,EADgB,CAEnB3C,gBAEFoC,GAAOS,KAAK,cAAe,CAAEQ,kBAYrBvD,MAAO6C,EAAUW,UACjBtD,WAAY2C,EAAU3C,WACtBC,SAAU0C,EAAUY,eAAiB,OAAS,MAC9C5B,YAAajG,EAAe,OAAS,MACrCyE,WAAYwC,EAAUxC,aAGxB,kBAAC,GAAD,CACEL,MAAO6C,EAAUW,UACjBvD,aA5Fe,SAACM,EAAcmD,GACtC,IAAMC,EAAWnD,KAAKC,MAAMD,KAAKE,UAAUmC,IACrCe,EAAoB,eAAQD,EAASE,eACvCJ,EAAiBE,EAASF,eAC1BK,EAAoBH,EAAStD,WAC7B+C,EAAaO,EAASP,WACtBlD,EAAayD,EAASzD,WAC1B0D,EAAqBF,KACrBxD,EAAWe,UACS,UAAhByC,IACFN,EAAaK,EAAiB,MAAQ,OACtCK,GAAqBA,EACrB5D,EAAa,CAAEe,QAAS,EAAGC,KAAM,KAER,IAAvBhB,EAAWe,UACbf,EAAa,CAAEe,QAAS,EAAGC,KAAM,IACjCuC,GAAkBA,GAEhBvD,EAAWe,QAAU,IAEpBwC,GAAkC,SAAhBC,IACjBD,GAAkC,QAAhBC,KAEpBD,GAAkBA,EAClBvD,EAAa,CAAEe,QAAS,EAAGC,KAAM,KAInB,UAAhBwC,GACgB,SAAhBA,GACAE,EAAqBF,KAAiBb,EAAUkB,YAAYL,KAE5DN,EAAaM,EACbI,GAAqBA,GAGvBhB,GAAgB,SAACQ,GAAD,sBACXA,EADW,CAEdE,UAAWjD,EACXsD,cAAeD,EACfvD,WAAYyD,EACZL,iBACAL,WAAYA,EACZlD,kBAGF,IAAMqD,EAAe/C,KAAKE,UAAL,eAChBmC,EADgB,CAEnBW,UAAWjD,EACXsD,cAAeD,EACfvD,WAAYyD,EACZL,iBACAL,WAAYA,EACZlD,gBAEFoC,GAAOS,KAAK,cAAe,CAAEQ,kBAsCrBrD,WAAY2C,EAAU3C,WACtBC,SAAU0C,EAAUY,eAAiB,OAAS,MAC9CrD,YAAaxE,EAAe,OAAS,MACrCyE,WAAYwC,EAAUxC,aAlB5B,O,OChDS2D,OAnDf,WAAgB,IAAD,EACsBnI,oBAAS,GAD/B,mBACNF,EADM,KACIsI,EADJ,OAE8BpI,oBAAS,GAFvC,mBAEND,EAFM,KAEQsI,EAFR,OAGkBrI,mBAAS,IAH3B,mBAGNyB,EAHM,KAGE6G,EAHF,KAKPC,EAAmB,SAACC,GACxBJ,EAAwB,WAATI,IAGXC,EAAmB,SAACC,GACxBL,EAA4B,SAATK,IAQrB,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEhJ,UAAWG,EAAW,SAAWC,EAAe,OAAS,MACzDH,aAAc2I,EACd1I,aAAc4I,EACd3I,SAAUA,EACVC,aAAcA,IAEhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6I,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACE9G,iBAlBW,SAACN,GACtB6G,EAAa7G,GACb2E,QAAQC,IAAI,yBAA2B5E,IAiB7B7B,aAAc2I,EACd1I,aAAc4I,EACd3I,SAAUA,EACVC,aAAcA,KAGlB,kBAAC,IAAD,CAAO8I,KAAK,iBACV,kBAAC,GAAD,CACE/I,SAAUA,EACVC,aAAcA,EACd0B,OAAQA,SCrCFqH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpI,MAAK,SAAAqI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1D,QAAQ0D,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6ECA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.10f2567b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Nav = styled.div`\n  background-color: #23ac8e;\n  position: sticky;\n  top: 0;\n  left: 0;\n  padding: 25px;\n  z-index: 5;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: black;\n\n  h2 {\n    cursor: pointer;\n    margin: 0;\n    font-weight: bold;\n  }\n`;\n\nconst RightMenu = styled.div`\n  display: flex;\n  select {\n    cursor: pointer;\n    margin-right: 20px;\n  }\n  button {\n    cursor: pointer;\n    font-size: 22px;\n    margin: 0px 5px;\n  }\n`;\n\nconst Navbar = ({\n  gameColor,\n  onRoleSelect,\n  onTeamSelect,\n  isMentor,\n  isBluePlayer,\n}) => {\n  const [showSettings, toggleShowSettings] = useState(false);\n  let history = useHistory();\n\n  const handleRoleSelect = (e) => {\n    e.persist();\n    onRoleSelect(e.target.value);\n  };\n\n  const handleTeamSelect = (e) => {\n    e.persist();\n    onTeamSelect(e.target.value);\n  };\n\n  const handleShowSetting = () => {\n    toggleShowSettings((currentValue) => !currentValue);\n  };\n\n  const handleGoToMenu = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Nav\n      style={\n        gameColor === \"mentor\"\n          ? {}\n          : { backgroundColor: gameColor, color: \"white\" }\n      }\n    >\n      <div onClick={handleGoToMenu}>\n        <h2>CodeNames App</h2>\n      </div>\n      <RightMenu>\n        {showSettings ? (\n          <div>\n            <select\n              onChange={handleRoleSelect}\n              value={isMentor ? \"mentor\" : \"player\"}\n            >\n              <option value=\"player\">שחקן</option>\n              <option value=\"mentor\">מנטור</option>\n            </select>\n            <select\n              onChange={handleTeamSelect}\n              value={isBluePlayer ? \"blue\" : \"red\"}\n            >\n              <option value=\"blue\">קבוצה כחולה</option>\n              <option value=\"red\">קבוצה אדומה</option>\n            </select>\n            <button onClick={handleGoToMenu}>⌂</button>\n            <button onClick={handleShowSetting}>⚙</button>\n          </div>\n        ) : (\n          <div>\n            <button onClick={handleShowSetting}>⚙</button>\n          </div>\n        )}\n      </RightMenu>\n    </Nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\nconst BASE_URL =\n  process.env.NODE_ENV === \"production\" ? \"/api\" : \"//localhost:5000/api\";\n\nfunction createGame() {\n  return axios\n    .get(BASE_URL + \"/creategame\")\n    .then((res) => {\n      return res.data;\n    })\n    .then((data) => data.gameId);\n}\n\nexport default {\n  createGame,\n};\n","import React, { useState } from \"react\";\nimport cardNameService from \"../services/cardNameService\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst NavContainer = styled.div`\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  margin: 30px auto;\n`;\n\nconst GamePick = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst GamePickSection = styled.div`\n  border: 1px solid black;\n  width: 50%;\n  border-radius: 5px;\n  margin: 50px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  h4 {\n    text-align: center;\n  }\n  p {\n    font-size: 12px;\n  }\n`;\n\nconst TeamRolePick = styled.div`\n  display: flex;\n  justify-content: center;\n  align-self: center;\n  border: 1px solid black;\n  width: 300px;\n\n  select {\n    width: 130px;\n    padding: 10px;\n    margin: 20px;\n  }\n`;\n\nconst GameMenu = ({\n  onHandleGameMenu,\n  onRoleSelect,\n  onTeamSelect,\n  isMentor,\n  isBluePlayer,\n}) => {\n  const [joinGameId, setJoinGameId] = useState(\"\");\n  const [newGameId, setNewGameId] = useState(\"\");\n  let history = useHistory();\n\n  const createNewGame = () => {\n    return cardNameService.createGame().then((newGameId) => {\n      setNewGameId(newGameId);\n    });\n  };\n\n  const handleNewGameId = () => {\n    onHandleGameMenu(newGameId);\n    history.push(\"/game/\" + newGameId);\n  };\n\n  const handleJoinGameId = () => {\n    onHandleGameMenu(joinGameId);\n    history.push(\"/game/\" + joinGameId);\n  };\n\n  const handleInputId = (e) => {\n    e.persist();\n    setJoinGameId(e.target.value);\n  };\n\n  const handleSubmitFormId = (e) => {\n    e.preventDefault();\n    handleJoinGameId();\n  };\n\n  const handleRoleSelect = (e) => {\n    e.persist();\n    onRoleSelect(e.target.value);\n  };\n  const handleTeamSelect = (e) => {\n    e.persist();\n    onTeamSelect(e.target.value);\n  };\n\n  return (\n    <NavContainer>\n      <GamePick>\n        <GamePickSection>\n          <h4>הצטרף למשחק</h4>\n          <form onSubmit={handleSubmitFormId}>\n            <button type=\"submit\">הצטרף</button>\n            <input onChange={handleInputId} type=\"text\" />\n          </form>\n        </GamePickSection>\n        <GamePickSection>\n          <h4>משחק חדש</h4>\n          <div>\n            <button\n              style={newGameId ? { display: \"none\" } : { display: \"block\" }}\n              onClick={createNewGame}\n            >\n              צור משחק\n            </button>\n          </div>\n          <div style={newGameId ? { display: \"block\" } : { display: \"none\" }}>\n            <p>game id:</p>\n            <p>{newGameId}</p>\n            <button onClick={handleNewGameId}>התחל משחק</button>\n          </div>\n        </GamePickSection>\n      </GamePick>\n\n      <TeamRolePick>\n        <select\n          onChange={handleRoleSelect}\n          value={isMentor ? \"mentor\" : \"player\"}\n        >\n          <option value=\"player\">שחקן</option>\n          <option value=\"mentor\">מנטור</option>\n        </select>\n        <select\n          onChange={handleTeamSelect}\n          value={isBluePlayer ? \"blue\" : \"red\"}\n        >\n          <option value=\"blue\">קבוצה כחולה</option>\n          <option value=\"red\">קבוצה אדומה</option>\n        </select>\n      </TeamRolePick>\n    </NavContainer>\n  );\n};\n\nexport default GameMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Announcement = styled.div`\n  padding: 13px;\n  background-color: black;\n  color: white;\n\n  h3 {\n    text-align: center;\n    margin: 0;\n    font-weight: bold;\n  }\n`;\n\nconst AnnouncementBar = ({ winner }) => {\n  return (\n    <Announcement style={winner ? { display: \"block\" } : { display: \"none\" }}>\n      <h3>\n        Game Over <span style={{ color: winner }}>{winner}</span> Team Won!\n      </h3>\n    </Announcement>\n  );\n};\n\nexport default AnnouncementBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport blueCard1 from \"../images/blue-card-1.png\";\nimport blueCard2 from \"../images/blue-card-2.png\";\nimport redCard1 from \"../images/red-card-1.png\";\nimport redCard2 from \"../images/red-card-2.png\";\nimport greyCard1 from \"../images/grey-card-1.png\";\nimport greyCard2 from \"../images/grey-card-2.png\";\nimport blackCard from \"../images/black-card.png\";\nimport regularCard from \"../images/card.png\";\n\nconst Card = styled.div`\n  width: 180px;\n  height: 120px;\n  margin: 7px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  color: snow;\n  position: relative;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst CardTitle = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 20px;\n  font-size: 16px;\n  text-align: center;\n  bottom: 18%;\n  background-color: rgba(0,0,0,0.5);\n  color: white;\n  padding: 2px 0;\n  cursor: pointer;\n`;\n\nconst NameCard = ({ color, revealed, word, onCardClick }) => {\n  const handleClick = (e) => {\n    e.persist();\n    const pickedWord = e.target.innerText;\n    onCardClick(pickedWord);\n  };\n\n  return (\n    <Card\n      style={\n        revealed\n          ? {\n              pointerEvents: \"none\",\n              backgroundSize: \"cover\",\n              backgroundImage:\n                color === \"blue\"\n                  ? `url(${blueCard1})`\n                  : color === \"red\"\n                  ? `url(${redCard1})`\n                  : color === \"grey\"\n                  ? `url(${greyCard1})`\n                  : `url(${blackCard})`,\n            }\n          : {\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              backgroundImage: `url(${regularCard})`,\n            }\n      }\n      onClick={handleClick}\n    >\n      <CardTitle style={revealed ? {} : {top: \"unset\", backgroundColor: \"transparent\", color: \"black\"}}>{word}</CardTitle>\n    </Card>\n  );\n};\n\nexport default NameCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NameCard from \"./NameCard\";\n\nconst Board = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst SideBoard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst GameMoves = styled.div`\n  width: 200px;\n  height: 200px;\n  border: 2px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  p {\n    padding: 0;\n    margin: 0;\n    text-align: center;\n  }\n`;\n\nconst PlayerBoard = ({\n  board,\n  onBoardClick,\n  mentorClue,\n  teamTurn,\n  playerColor,\n  isGameOver,\n}) => {\n  const handleCardClick = (pickedWord) => {\n    const updatedBoard = JSON.parse(JSON.stringify(board));\n    const wordObjIdx = updatedBoard.findIndex((row) =>\n      row.find((card) => card.word === pickedWord)\n    );\n    const wordObj = updatedBoard[wordObjIdx].find(\n      (card) => card.word === pickedWord\n    );\n    wordObj.revealed = !wordObj.revealed;\n    onBoardClick(updatedBoard, wordObj.color);\n  };\n\n  return (\n    <Board\n      style={\n        mentorClue.wordNum < 1 ||\n        mentorClue.clue === \"\" ||\n        teamTurn !== playerColor\n          ? { pointerEvents: \"none\" }\n          : {}\n      }\n    >\n      <div>\n        {board.map((row, ri) => {\n          return (\n            <Row key={ri}>\n              {row.map((card) => {\n                return (\n                  <NameCard\n                    key={card.id}\n                    color={card.color}\n                    revealed={card.revealed}\n                    word={card.word}\n                    onCardClick={handleCardClick}\n                  />\n                );\n              })}\n            </Row>\n          );\n        })}\n      </div>\n      <SideBoard style={isGameOver ? { display: \"none\" } : {}}>\n        <GameMoves>\n          <p style={{ color: teamTurn, fontWeight: \"bold\" }}>\n            תור הקבוצה <span>{teamTurn === \"blue\" ? \"הכחולה\" : \"האדומה\"}</span>\n          </p>\n          <div>\n            <p>מילת קוד</p>\n            <p>{mentorClue.clue}</p>\n          </div>\n          <div>\n            <p>מספר מילים</p>\n            <p>{mentorClue.wordNum}</p>\n          </div>\n        </GameMoves>\n      </SideBoard>\n    </Board>\n  );\n};\n\nexport default PlayerBoard;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport NameCard from \"./NameCard\";\n\nconst Board = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Card = styled.div`\n  width: 180px;\n  height: 120px;\n  margin: 7px;\n  border: 1px solid #000;\n  border-radius: 10px;\n  color: snow;\n  position: relative;\n`;\n\nconst CardTitle = styled.p`\n  position: absolute;\n  font-size: 20px;\n  text-align: center;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0px;\n  cursor: pointer;\n`;\n\nconst CardMark = styled.p`\n  position: absolute;\n  font-size: 100px;\n  font-weight: lighter;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0px;\n`;\n\nconst SideBoard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst Control = styled.form`\n  width: 200px;\n  height: 200px;\n  border: 2px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  input {\n    width: 150px;\n    margin-top: 10px;\n    margin-bottom: 30px;\n    text-align: center;\n  }\n\n  button {\n    width: 100px;\n  }\n`;\n\nconst GameMoves = styled.div`\n  width: 200px;\n  height: 200px;\n  border: 2px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  p {\n    padding: 0;\n    margin: 0;\n    text-align: center;\n  }\n`;\n\nconst MentorBoard = ({\n  board,\n  onMentorClueChange,\n  mentorClue,\n  teamTurn,\n  mentorColor,\n  isGameOver,\n}) => {\n  const [formValues, setFormValues] = useState({ wordNum: 0, clue: \"\" });\n  useEffect(() => {\n    console.log(\"from mentor clue: \" + formValues.clue);\n    console.log(\"from mentor num: \" + formValues.wordNum);\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onMentorClueChange(formValues);\n    setFormValues({ wordNum: 0, clue: \"\" });\n  };\n\n  const handleInputChange = (e) => {\n    e.persist();\n    setFormValues((currentValues) => ({\n      ...currentValues,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <Board style={teamTurn !== mentorColor ? { pointerEvents: \"none\" } : {}}>\n      <div>\n        {board.map((row, ri) => {\n          return (\n            <Row key={ri}>\n              {row.map((card) => {\n                if (!card.revealed) {\n                  return (\n                    <Card key={card.id} style={{ backgroundColor: card.color }}>\n                      <CardTitle>{card.word}</CardTitle>\n                    </Card>\n                  );\n                } else {\n                  return (\n                    <NameCard\n                      key={card.id}\n                      color={card.color}\n                      revealed={card.revealed}\n                      word={card.word}\n                    />\n                  );\n                }\n              })}\n            </Row>\n          );\n        })}\n      </div>\n      <SideBoard style={isGameOver ? { display: \"none\" } : {}}>\n        <Control onSubmit={handleSubmit}>\n          מילת קוד\n          <input\n            type=\"text\"\n            onChange={handleInputChange}\n            value={formValues.clue}\n            name=\"clue\"\n          />\n          מספר מילים\n          <input\n            type=\"number\"\n            onChange={handleInputChange}\n            value={formValues.wordNum}\n            name=\"wordNum\"\n          />\n          <button type=\"submit\">Send</button>\n        </Control>\n        <GameMoves>\n          <p style={{ color: teamTurn, fontWeight: \"bold\" }}>\n            תור הקבוצה <span>{teamTurn === \"blue\" ? \"הכחולה\" : \"האדומה\"}</span>\n          </p>\n          <div>\n            <p>מילת קוד</p>\n            <p>{mentorClue.clue}</p>\n          </div>\n          <div>\n            <p>מספר מילים</p>\n            <p>{mentorClue.wordNum}</p>\n          </div>\n        </GameMoves>\n      </SideBoard>\n    </Board>\n  );\n};\n\nexport default MentorBoard;\n","import React, { useState, useEffect } from \"react\";\nimport AnnouncementBar from \"./AnnouncementBar\";\nimport PlayerBoard from \"./PlayerBoard\";\nimport MentorBoard from \"./MentorBoard\";\nimport { useParams } from \"react-router-dom\";\n\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:5000\");\n\nfunction Game({ isMentor, isBluePlayer }) {\n  let { gameId } = useParams();\n\n  const [isLoading, updateIsLoading] = useState(true);\n  const [gameState, updateGameState] = useState(null);\n\n  useEffect(() => {\n    socket.emit(\"game\", { game: gameId });\n  }, [isLoading, gameId]);\n\n  useEffect(() => {\n    socket.on(\"game updated\", (payload) => {\n      const gameObj = JSON.parse(payload);\n      updateGameState(gameObj);\n      updateIsLoading(false);\n    });\n  }, []);\n\n\n  const handleBoardClick = (updatedBoard, pickedColor) => {\n    const stateObj = JSON.parse(JSON.stringify(gameState));\n    const updatedColorCounters = { ...stateObj.colorCounters };\n    let isBlueTeamTurn = stateObj.isBlueTeamTurn;\n    let updatedIsGameOver = stateObj.isGameOver;\n    let winnerTeam = stateObj.winnerTeam;\n    let mentorClue = stateObj.mentorClue;\n    updatedColorCounters[pickedColor]++;\n    mentorClue.wordNum--;\n    if (pickedColor === \"black\") {\n      winnerTeam = isBlueTeamTurn ? \"red\" : \"blue\";\n      updatedIsGameOver = !updatedIsGameOver;\n      mentorClue = { wordNum: 0, clue: \"\" };\n    }\n    if (mentorClue.wordNum === 0) {\n      mentorClue = { wordNum: 0, clue: \"\" };\n      isBlueTeamTurn = !isBlueTeamTurn;\n    }\n    if (mentorClue.wordNum > 0) {\n      if (\n        (isBlueTeamTurn && pickedColor !== \"blue\") ||\n        (!isBlueTeamTurn && pickedColor !== \"red\")\n      ) {\n        isBlueTeamTurn = !isBlueTeamTurn;\n        mentorClue = { wordNum: 0, clue: \"\" };\n      }\n    }\n    if (\n      pickedColor !== \"black\" &&\n      pickedColor !== \"grey\" &&\n      updatedColorCounters[pickedColor] === gameState.colorLimits[pickedColor]\n    ) {\n      winnerTeam = pickedColor;\n      updatedIsGameOver = !updatedIsGameOver;\n    }\n\n    updateGameState((currentValus) => ({\n      ...currentValus,\n      gameModel: updatedBoard,\n      colorCounters: updatedColorCounters,\n      isGameOver: updatedIsGameOver,\n      isBlueTeamTurn,\n      winnerTeam: winnerTeam,\n      mentorClue,\n    }));\n\n    const gameStateStr = JSON.stringify({\n      ...gameState,\n      gameModel: updatedBoard,\n      colorCounters: updatedColorCounters,\n      isGameOver: updatedIsGameOver,\n      isBlueTeamTurn,\n      winnerTeam: winnerTeam,\n      mentorClue,\n    });\n    socket.emit(\"update game\", { gameStateStr });\n  };\n\n  const handleMentorClueChange = (clueObj) => {\n    const stateObj = JSON.parse(JSON.stringify(gameState));\n    let mentorClue = stateObj.mentorClue;\n    mentorClue = clueObj;\n    updateGameState((currentValus) => ({\n      ...currentValus,\n      mentorClue,\n    }));\n\n    const gameStateStr = JSON.stringify({\n      ...gameState,\n      mentorClue,\n    });\n    socket.emit(\"update game\", { gameStateStr });\n  };\n\n  if (isLoading) {\n    return <div>loading....</div>;\n  } else {\n    return (\n      <div>\n        <AnnouncementBar winner={gameState.winnerTeam} />\n        {isMentor ? (\n          <MentorBoard\n            onMentorClueChange={handleMentorClueChange}\n            board={gameState.gameModel}\n            mentorClue={gameState.mentorClue}\n            teamTurn={gameState.isBlueTeamTurn ? \"blue\" : \"red\"}\n            mentorColor={isBluePlayer ? \"blue\" : \"red\"}\n            isGameOver={gameState.isGameOver}\n          />\n        ) : (\n          <PlayerBoard\n            board={gameState.gameModel}\n            onBoardClick={handleBoardClick}\n            mentorClue={gameState.mentorClue}\n            teamTurn={gameState.isBlueTeamTurn ? \"blue\" : \"red\"}\n            playerColor={isBluePlayer ? \"blue\" : \"red\"}\n            isGameOver={gameState.isGameOver}\n          />\n        )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport GameMenu from \"./components/GameMenu\";\nimport Game from \"./components/Game\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isMentor, updateIsMentor] = useState(false);\n  const [isBluePlayer, updateIsBluePlayer] = useState(true);\n  const [gameId, updateGameId] = useState(\"\");\n\n  const handleRoleSelect = (role) => {\n    updateIsMentor(role === \"mentor\");\n  };\n\n  const handleTeamSelect = (team) => {\n    updateIsBluePlayer(team === \"blue\");\n  };\n\n  const handleGameMenu = (gameId) => {\n    updateGameId(gameId);\n    console.log(\"from handleGameMenu : \" + gameId);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar\n          gameColor={isMentor ? \"mentor\" : isBluePlayer ? \"blue\" : \"red\"}\n          onRoleSelect={handleRoleSelect}\n          onTeamSelect={handleTeamSelect}\n          isMentor={isMentor}\n          isBluePlayer={isBluePlayer}\n        />\n        <Switch>\n          <Route exact path=\"/\">\n            <GameMenu\n              onHandleGameMenu={handleGameMenu}\n              onRoleSelect={handleRoleSelect}\n              onTeamSelect={handleTeamSelect}\n              isMentor={isMentor}\n              isBluePlayer={isBluePlayer}\n            />\n          </Route>\n          <Route path=\"/game/:gameId\">\n            <Game\n              isMentor={isMentor}\n              isBluePlayer={isBluePlayer}\n              gameId={gameId}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blue-card-1.13eb5b0a.png\";","module.exports = __webpack_public_path__ + \"static/media/red-card-1.31df61fc.png\";","module.exports = __webpack_public_path__ + \"static/media/grey-card-1.9a84e1e9.png\";","module.exports = __webpack_public_path__ + \"static/media/black-card.b6c4a110.png\";","module.exports = __webpack_public_path__ + \"static/media/card.60931e11.png\";","module.exports = __webpack_public_path__ + \"static/media/blue-card-2.9933c915.png\";","module.exports = __webpack_public_path__ + \"static/media/red-card-2.447d7512.png\";","module.exports = __webpack_public_path__ + \"static/media/grey-card-2.34dd809a.png\";"],"sourceRoot":""}