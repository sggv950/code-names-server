{"version":3,"sources":["components/Navbar.js","services/cardNameService.js","components/GameMenu.js","components/AnnouncementBar.js","components/NameCard.js","components/PlayerBoard.js","components/MentorBoard.js","components/Game.js","App.js","serviceWorker.js","index.js","images/blue-card-1.png","images/blue-card-2.png","images/red-card-1.png","images/red-card-2.png","images/grey-card-1.png","images/grey-card-2.png","images/black-card.png","images/card.png"],"names":["Nav","styled","div","RightMenu","Navbar","gameColor","onRoleSelect","onTeamSelect","isMentor","isBluePlayer","useState","showSettings","toggleShowSettings","history","useHistory","handleShowSetting","currentValue","handleGoToMenu","push","style","backgroundColor","color","onClick","onChange","e","persist","target","value","createGame","axios","get","BASE_URL","then","res","data","gameId","NavContainer","GamePick","GamePickSection","TeamRolePick","GameMenu","onHandleGameMenu","joinGameId","setJoinGameId","newGameId","setNewGameId","onSubmit","preventDefault","type","display","cardNameService","Announcement","AnnouncementBar","winner","Card","CardTitle","NameCard","revealed","word","onCardClick","coor","pointerEvents","backgroundSize","backgroundImage","blueCard2","blueCard1","redCard2","redCard1","greyCard2","greyCard1","blackCard","setCardImg","backgroundPosition","regularCard","pickedWord","innerText","top","Board","Row","SideBoard","GameMoves","PlayerBoard","board","onBoardClick","mentorClue","teamTurn","playerColor","isGameOver","handleCardClick","updatedBoard","JSON","parse","stringify","wordObjIdx","findIndex","row","find","card","wordObj","wordNum","clue","map","rowIdx","key","cardIdx","id","fontWeight","p","Control","form","MentorBoard","onMentorClueChange","mentorColor","formValues","setFormValues","useEffect","console","log","handleInputChange","currentValues","name","ri","socket","require","io","Game","useParams","isLoading","updateIsLoading","gameState","updateGameState","emit","game","on","payload","gameObj","winnerTeam","clueObj","currentValus","gameStateStr","gameModel","isBlueTeamTurn","pickedColor","stateObj","updatedColorCounters","colorCounters","updatedIsGameOver","colorLimits","App","updateIsMentor","updateIsBluePlayer","updateGameId","handleRoleSelect","role","handleTeamSelect","team","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.eeb5cb62.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = styled.div`\r\n  background-color: #23ac8e;\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 25px;\r\n  z-index: 5;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: black;\r\n\r\n  h2 {\r\n    cursor: pointer;\r\n    margin: 0;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst RightMenu = styled.div`\r\n  display: flex;\r\n  select {\r\n    cursor: pointer;\r\n    margin-right: 20px;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    font-size: 22px;\r\n    margin: 0px 5px;\r\n  }\r\n`;\r\n\r\nconst Navbar = ({\r\n  gameColor,\r\n  onRoleSelect,\r\n  onTeamSelect,\r\n  isMentor,\r\n  isBluePlayer,\r\n}) => {\r\n  const [showSettings, toggleShowSettings] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const handleRoleSelect = (e) => {\r\n    e.persist();\r\n    onRoleSelect(e.target.value);\r\n  };\r\n\r\n  const handleTeamSelect = (e) => {\r\n    e.persist();\r\n    onTeamSelect(e.target.value);\r\n  };\r\n\r\n  const handleShowSetting = () => {\r\n    toggleShowSettings((currentValue) => !currentValue);\r\n  };\r\n\r\n  const handleGoToMenu = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Nav\r\n      style={\r\n        gameColor === \"mentor\"\r\n          ? {}\r\n          : { backgroundColor: gameColor, color: \"white\" }\r\n      }\r\n    >\r\n      <div onClick={handleGoToMenu}>\r\n        <h2>CodeNames App</h2>\r\n      </div>\r\n      <RightMenu>\r\n        {showSettings ? (\r\n          <div>\r\n            <select\r\n              onChange={handleRoleSelect}\r\n              value={isMentor ? \"mentor\" : \"player\"}\r\n            >\r\n              <option value=\"player\">שחקן</option>\r\n              <option value=\"mentor\">מנטור</option>\r\n            </select>\r\n            <select\r\n              onChange={handleTeamSelect}\r\n              value={isBluePlayer ? \"blue\" : \"red\"}\r\n            >\r\n              <option value=\"blue\">קבוצה כחולה</option>\r\n              <option value=\"red\">קבוצה אדומה</option>\r\n            </select>\r\n            <button onClick={handleGoToMenu}>⌂</button>\r\n            <button onClick={handleShowSetting}>⚙</button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <button onClick={handleShowSetting}>⚙</button>\r\n          </div>\r\n        )}\r\n      </RightMenu>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === \"production\" ? \"/api\" : \"//localhost:5000/api\";\r\n\r\nfunction createGame() {\r\n  return axios\r\n    .get(BASE_URL + \"/creategame\")\r\n    .then((res) => {\r\n      return res.data;\r\n    })\r\n    .then((data) => data.gameId);\r\n}\r\n\r\nexport default {\r\n  createGame,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport cardNameService from \"../services/cardNameService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavContainer = styled.div`\r\n  width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 30px auto;\r\n`;\r\n\r\nconst GamePick = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst GamePickSection = styled.div`\r\n  border: 1px solid black;\r\n  width: 50%;\r\n  border-radius: 5px;\r\n  margin: 50px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h4 {\r\n    text-align: center;\r\n  }\r\n  p {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst TeamRolePick = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  border: 1px solid black;\r\n  width: 300px;\r\n\r\n  select {\r\n    width: 130px;\r\n    padding: 10px;\r\n    margin: 20px;\r\n  }\r\n`;\r\n\r\nconst GameMenu = ({\r\n  onHandleGameMenu,\r\n  onRoleSelect,\r\n  onTeamSelect,\r\n  isMentor,\r\n  isBluePlayer,\r\n}) => {\r\n  const [joinGameId, setJoinGameId] = useState(\"\");\r\n  const [newGameId, setNewGameId] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const createNewGame = () => {\r\n    return cardNameService.createGame().then((newGameId) => {\r\n      setNewGameId(newGameId);\r\n    });\r\n  };\r\n\r\n  const handleNewGameId = () => {\r\n    onHandleGameMenu(newGameId);\r\n    history.push(\"/game/\" + newGameId);\r\n  };\r\n\r\n  const handleJoinGameId = () => {\r\n    onHandleGameMenu(joinGameId);\r\n    history.push(\"/game/\" + joinGameId);\r\n  };\r\n\r\n  const handleInputId = (e) => {\r\n    e.persist();\r\n    setJoinGameId(e.target.value);\r\n  };\r\n\r\n  const handleSubmitFormId = (e) => {\r\n    e.preventDefault();\r\n    handleJoinGameId();\r\n  };\r\n\r\n  const handleRoleSelect = (e) => {\r\n    e.persist();\r\n    onRoleSelect(e.target.value);\r\n  };\r\n  const handleTeamSelect = (e) => {\r\n    e.persist();\r\n    onTeamSelect(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <NavContainer>\r\n      <GamePick>\r\n        <GamePickSection>\r\n          <h4>הצטרף למשחק</h4>\r\n          <form onSubmit={handleSubmitFormId}>\r\n            <button type=\"submit\">הצטרף</button>\r\n            <input onChange={handleInputId} type=\"text\" />\r\n          </form>\r\n        </GamePickSection>\r\n        <GamePickSection>\r\n          <h4>משחק חדש</h4>\r\n          <div>\r\n            <button\r\n              style={newGameId ? { display: \"none\" } : { display: \"block\" }}\r\n              onClick={createNewGame}\r\n            >\r\n              צור משחק\r\n            </button>\r\n          </div>\r\n          <div style={newGameId ? { display: \"block\" } : { display: \"none\" }}>\r\n            <p>game id:</p>\r\n            <p>{newGameId}</p>\r\n            <button onClick={handleNewGameId}>התחל משחק</button>\r\n          </div>\r\n        </GamePickSection>\r\n      </GamePick>\r\n\r\n      <TeamRolePick>\r\n        <select\r\n          onChange={handleRoleSelect}\r\n          value={isMentor ? \"mentor\" : \"player\"}\r\n        >\r\n          <option value=\"player\">שחקן</option>\r\n          <option value=\"mentor\">מנטור</option>\r\n        </select>\r\n        <select\r\n          onChange={handleTeamSelect}\r\n          value={isBluePlayer ? \"blue\" : \"red\"}\r\n        >\r\n          <option value=\"blue\">קבוצה כחולה</option>\r\n          <option value=\"red\">קבוצה אדומה</option>\r\n        </select>\r\n      </TeamRolePick>\r\n    </NavContainer>\r\n  );\r\n};\r\n\r\nexport default GameMenu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Announcement = styled.div`\r\n  padding: 13px;\r\n  background-color: black;\r\n  color: white;\r\n\r\n  h3 {\r\n    text-align: center;\r\n    margin: 0;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst AnnouncementBar = ({ winner }) => {\r\n  return (\r\n    <Announcement style={winner ? { display: \"block\" } : { display: \"none\" }}>\r\n      <h3>\r\n        Game Over <span style={{ color: winner }}>{winner}</span> Team Won!\r\n      </h3>\r\n    </Announcement>\r\n  );\r\n};\r\n\r\nexport default AnnouncementBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport blueCard1 from \"../images/blue-card-1.png\";\r\nimport blueCard2 from \"../images/blue-card-2.png\";\r\nimport redCard1 from \"../images/red-card-1.png\";\r\nimport redCard2 from \"../images/red-card-2.png\";\r\nimport greyCard1 from \"../images/grey-card-1.png\";\r\nimport greyCard2 from \"../images/grey-card-2.png\";\r\nimport blackCard from \"../images/black-card.png\";\r\nimport regularCard from \"../images/card.png\";\r\n\r\nconst Card = styled.div`\r\n  width: 180px;\r\n  height: 120px;\r\n  margin: 7px;\r\n  border: 1px solid #000;\r\n  border-radius: 10px;\r\n  color: snow;\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 20px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  bottom: 18%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  padding: 2px 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst NameCard = ({ color, revealed, word, onCardClick, coor }) => {\r\n  const handleClick = (e) => {\r\n    e.persist();\r\n    const pickedWord = e.target.innerText;\r\n    onCardClick(pickedWord);\r\n  };\r\n\r\n  const setCardImg = (color, coor) => {\r\n    if(color === \"blue\") {\r\n      if(coor % 2 === 0) return blueCard2;\r\n      else return blueCard1;\r\n    }\r\n    if(color === \"red\") {\r\n      if(coor % 2 === 0) return redCard2;\r\n      else return redCard1;\r\n    }\r\n    if(color === \"grey\") {\r\n      if(coor % 2 === 0) return greyCard2;\r\n      else return greyCard1;\r\n    }\r\n    if(color === \"black\") return blackCard;\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={\r\n        revealed\r\n          ? {\r\n              pointerEvents: \"none\",\r\n              backgroundSize: \"cover\",\r\n              backgroundImage: `url(${setCardImg(color, coor)})`\r\n            }\r\n          : {\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n              backgroundImage: `url(${regularCard})`,\r\n            }\r\n      }\r\n      onClick={handleClick}\r\n    >\r\n      <CardTitle\r\n        style={\r\n          revealed\r\n            ? {}\r\n            : { top: \"unset\", backgroundColor: \"transparent\", color: \"black\" }\r\n        }\r\n      >\r\n        {word}\r\n      </CardTitle>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NameCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NameCard from \"./NameCard\";\r\n\r\nconst Board = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SideBoard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst GameMoves = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  border: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst PlayerBoard = ({\r\n  board,\r\n  onBoardClick,\r\n  mentorClue,\r\n  teamTurn,\r\n  playerColor,\r\n  isGameOver,\r\n}) => {\r\n  const handleCardClick = (pickedWord) => {\r\n    const updatedBoard = JSON.parse(JSON.stringify(board));\r\n    const wordObjIdx = updatedBoard.findIndex((row) =>\r\n      row.find((card) => card.word === pickedWord)\r\n    );\r\n    const wordObj = updatedBoard[wordObjIdx].find(\r\n      (card) => card.word === pickedWord\r\n    );\r\n    wordObj.revealed = !wordObj.revealed;\r\n    onBoardClick(updatedBoard, wordObj.color);\r\n  };\r\n\r\n  return (\r\n    <Board\r\n      style={\r\n        mentorClue.wordNum < 1 ||\r\n        mentorClue.clue === \"\" ||\r\n        teamTurn !== playerColor\r\n          ? { pointerEvents: \"none\" }\r\n          : {}\r\n      }\r\n    >\r\n      <div>\r\n        {board.map((row, rowIdx) => {\r\n          return (\r\n            <Row key={rowIdx}>\r\n              {row.map((card, cardIdx) => {\r\n                return (\r\n                  <NameCard\r\n                    key={card.id}\r\n                    color={card.color}\r\n                    revealed={card.revealed}\r\n                    word={card.word}\r\n                    onCardClick={handleCardClick}\r\n                    coor={rowIdx+cardIdx}\r\n                  />\r\n                );\r\n              })}\r\n            </Row>\r\n          );\r\n        })}\r\n      </div>\r\n      <SideBoard style={isGameOver ? { display: \"none\" } : {}}>\r\n        <GameMoves>\r\n          <p style={{ color: teamTurn, fontWeight: \"bold\" }}>\r\n            תור הקבוצה <span>{teamTurn === \"blue\" ? \"הכחולה\" : \"האדומה\"}</span>\r\n          </p>\r\n          <div>\r\n            <p>מילת קוד</p>\r\n            <p>{mentorClue.clue}</p>\r\n          </div>\r\n          <div>\r\n            <p>מספר מילים</p>\r\n            <p>{mentorClue.wordNum}</p>\r\n          </div>\r\n        </GameMoves>\r\n      </SideBoard>\r\n    </Board>\r\n  );\r\n};\r\n\r\nexport default PlayerBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NameCard from \"./NameCard\";\r\n\r\nconst Board = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  width: 180px;\r\n  height: 120px;\r\n  margin: 7px;\r\n  border: 1px solid #000;\r\n  border-radius: 10px;\r\n  color: snow;\r\n  position: relative;\r\n`;\r\n\r\nconst CardTitle = styled.p`\r\n  position: absolute;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  margin: 0px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CardMark = styled.p`\r\n  position: absolute;\r\n  font-size: 100px;\r\n  font-weight: lighter;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  margin: 0px;\r\n`;\r\n\r\nconst SideBoard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nconst Control = styled.form`\r\n  width: 200px;\r\n  height: 200px;\r\n  border: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  input {\r\n    width: 150px;\r\n    margin-top: 10px;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  button {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst GameMoves = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  border: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst MentorBoard = ({\r\n  board,\r\n  onMentorClueChange,\r\n  mentorClue,\r\n  teamTurn,\r\n  mentorColor,\r\n  isGameOver,\r\n}) => {\r\n  const [formValues, setFormValues] = useState({ wordNum: 0, clue: \"\" });\r\n  useEffect(() => {\r\n    console.log(\"from mentor clue: \" + formValues.clue);\r\n    console.log(\"from mentor num: \" + formValues.wordNum);\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onMentorClueChange(formValues);\r\n    setFormValues({ wordNum: 0, clue: \"\" });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setFormValues((currentValues) => ({\r\n      ...currentValues,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Board style={teamTurn !== mentorColor ? { pointerEvents: \"none\" } : {}}>\r\n      <div>\r\n        {board.map((row, ri) => {\r\n          return (\r\n            <Row key={ri}>\r\n              {row.map((card) => {\r\n                if (!card.revealed) {\r\n                  return (\r\n                    <Card key={card.id} style={{ backgroundColor: card.color }}>\r\n                      <CardTitle>{card.word}</CardTitle>\r\n                    </Card>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <NameCard\r\n                      key={card.id}\r\n                      color={card.color}\r\n                      revealed={card.revealed}\r\n                      word={card.word}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n            </Row>\r\n          );\r\n        })}\r\n      </div>\r\n      <SideBoard style={isGameOver ? { display: \"none\" } : {}}>\r\n        <Control onSubmit={handleSubmit}>\r\n          מילת קוד\r\n          <input\r\n            type=\"text\"\r\n            onChange={handleInputChange}\r\n            value={formValues.clue}\r\n            name=\"clue\"\r\n          />\r\n          מספר מילים\r\n          <input\r\n            type=\"number\"\r\n            onChange={handleInputChange}\r\n            value={formValues.wordNum}\r\n            name=\"wordNum\"\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n        </Control>\r\n        <GameMoves>\r\n          <p style={{ color: teamTurn, fontWeight: \"bold\" }}>\r\n            תור הקבוצה <span>{teamTurn === \"blue\" ? \"הכחולה\" : \"האדומה\"}</span>\r\n          </p>\r\n          <div>\r\n            <p>מילת קוד</p>\r\n            <p>{mentorClue.clue}</p>\r\n          </div>\r\n          <div>\r\n            <p>מספר מילים</p>\r\n            <p>{mentorClue.wordNum}</p>\r\n          </div>\r\n        </GameMoves>\r\n      </SideBoard>\r\n    </Board>\r\n  );\r\n};\r\n\r\nexport default MentorBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AnnouncementBar from \"./AnnouncementBar\";\r\nimport PlayerBoard from \"./PlayerBoard\";\r\nimport MentorBoard from \"./MentorBoard\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst io = require(\"socket.io-client\");\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction Game({ isMentor, isBluePlayer }) {\r\n  let { gameId } = useParams();\r\n\r\n  const [isLoading, updateIsLoading] = useState(true);\r\n  const [gameState, updateGameState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"game\", { game: gameId });\r\n  }, [isLoading, gameId]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"game updated\", (payload) => {\r\n      const gameObj = JSON.parse(payload);\r\n      updateGameState(gameObj);\r\n      updateIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n\r\n  const handleBoardClick = (updatedBoard, pickedColor) => {\r\n    const stateObj = JSON.parse(JSON.stringify(gameState));\r\n    const updatedColorCounters = { ...stateObj.colorCounters };\r\n    let isBlueTeamTurn = stateObj.isBlueTeamTurn;\r\n    let updatedIsGameOver = stateObj.isGameOver;\r\n    let winnerTeam = stateObj.winnerTeam;\r\n    let mentorClue = stateObj.mentorClue;\r\n    updatedColorCounters[pickedColor]++;\r\n    mentorClue.wordNum--;\r\n    if (pickedColor === \"black\") {\r\n      winnerTeam = isBlueTeamTurn ? \"red\" : \"blue\";\r\n      updatedIsGameOver = !updatedIsGameOver;\r\n      mentorClue = { wordNum: 0, clue: \"\" };\r\n    }\r\n    if (mentorClue.wordNum === 0) {\r\n      mentorClue = { wordNum: 0, clue: \"\" };\r\n      isBlueTeamTurn = !isBlueTeamTurn;\r\n    }\r\n    if (mentorClue.wordNum > 0) {\r\n      if (\r\n        (isBlueTeamTurn && pickedColor !== \"blue\") ||\r\n        (!isBlueTeamTurn && pickedColor !== \"red\")\r\n      ) {\r\n        isBlueTeamTurn = !isBlueTeamTurn;\r\n        mentorClue = { wordNum: 0, clue: \"\" };\r\n      }\r\n    }\r\n    if (\r\n      pickedColor !== \"black\" &&\r\n      pickedColor !== \"grey\" &&\r\n      updatedColorCounters[pickedColor] === gameState.colorLimits[pickedColor]\r\n    ) {\r\n      winnerTeam = pickedColor;\r\n      updatedIsGameOver = !updatedIsGameOver;\r\n    }\r\n\r\n    updateGameState((currentValus) => ({\r\n      ...currentValus,\r\n      gameModel: updatedBoard,\r\n      colorCounters: updatedColorCounters,\r\n      isGameOver: updatedIsGameOver,\r\n      isBlueTeamTurn,\r\n      winnerTeam: winnerTeam,\r\n      mentorClue,\r\n    }));\r\n\r\n    const gameStateStr = JSON.stringify({\r\n      ...gameState,\r\n      gameModel: updatedBoard,\r\n      colorCounters: updatedColorCounters,\r\n      isGameOver: updatedIsGameOver,\r\n      isBlueTeamTurn,\r\n      winnerTeam: winnerTeam,\r\n      mentorClue,\r\n    });\r\n    socket.emit(\"update game\", { gameStateStr });\r\n  };\r\n\r\n  const handleMentorClueChange = (clueObj) => {\r\n    const stateObj = JSON.parse(JSON.stringify(gameState));\r\n    let mentorClue = stateObj.mentorClue;\r\n    mentorClue = clueObj;\r\n    updateGameState((currentValus) => ({\r\n      ...currentValus,\r\n      mentorClue,\r\n    }));\r\n\r\n    const gameStateStr = JSON.stringify({\r\n      ...gameState,\r\n      mentorClue,\r\n    });\r\n    socket.emit(\"update game\", { gameStateStr });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>loading....</div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <AnnouncementBar winner={gameState.winnerTeam} />\r\n        {isMentor ? (\r\n          <MentorBoard\r\n            onMentorClueChange={handleMentorClueChange}\r\n            board={gameState.gameModel}\r\n            mentorClue={gameState.mentorClue}\r\n            teamTurn={gameState.isBlueTeamTurn ? \"blue\" : \"red\"}\r\n            mentorColor={isBluePlayer ? \"blue\" : \"red\"}\r\n            isGameOver={gameState.isGameOver}\r\n          />\r\n        ) : (\r\n          <PlayerBoard\r\n            board={gameState.gameModel}\r\n            onBoardClick={handleBoardClick}\r\n            mentorClue={gameState.mentorClue}\r\n            teamTurn={gameState.isBlueTeamTurn ? \"blue\" : \"red\"}\r\n            playerColor={isBluePlayer ? \"blue\" : \"red\"}\r\n            isGameOver={gameState.isGameOver}\r\n          />\r\n        )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport GameMenu from \"./components/GameMenu\";\r\nimport Game from \"./components/Game\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [isMentor, updateIsMentor] = useState(false);\r\n  const [isBluePlayer, updateIsBluePlayer] = useState(true);\r\n  const [gameId, updateGameId] = useState(\"\");\r\n\r\n  const handleRoleSelect = (role) => {\r\n    updateIsMentor(role === \"mentor\");\r\n  };\r\n\r\n  const handleTeamSelect = (team) => {\r\n    updateIsBluePlayer(team === \"blue\");\r\n  };\r\n\r\n  const handleGameMenu = (gameId) => {\r\n    updateGameId(gameId);\r\n    console.log(\"from handleGameMenu : \" + gameId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar\r\n          gameColor={isMentor ? \"mentor\" : isBluePlayer ? \"blue\" : \"red\"}\r\n          onRoleSelect={handleRoleSelect}\r\n          onTeamSelect={handleTeamSelect}\r\n          isMentor={isMentor}\r\n          isBluePlayer={isBluePlayer}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <GameMenu\r\n              onHandleGameMenu={handleGameMenu}\r\n              onRoleSelect={handleRoleSelect}\r\n              onTeamSelect={handleTeamSelect}\r\n              isMentor={isMentor}\r\n              isBluePlayer={isBluePlayer}\r\n            />\r\n          </Route>\r\n          <Route path=\"/game/:gameId\">\r\n            <Game\r\n              isMentor={isMentor}\r\n              isBluePlayer={isBluePlayer}\r\n              gameId={gameId}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/blue-card-1.13eb5b0a.png\";","module.exports = __webpack_public_path__ + \"static/media/blue-card-2.9933c915.png\";","module.exports = __webpack_public_path__ + \"static/media/red-card-1.31df61fc.png\";","module.exports = __webpack_public_path__ + \"static/media/red-card-2.447d7512.png\";","module.exports = __webpack_public_path__ + \"static/media/grey-card-1.9a84e1e9.png\";","module.exports = __webpack_public_path__ + \"static/media/grey-card-2.34dd809a.png\";","module.exports = __webpack_public_path__ + \"static/media/black-card.b6c4a110.png\";","module.exports = __webpack_public_path__ + \"static/media/card.60931e11.png\";"],"sourceRoot":""}